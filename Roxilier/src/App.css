
@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700");
*,
*:before,
*:after {
  box-sizing: border-box;
}
#root {
  width: 100%;
  margin: 0 auto;
  position: absolute;
  top: 0;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}



body {
  padding: 24px;
  font-family: "Source Sans Pro", sans-serif;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

.container {
  margin: 20px;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  min-height: 100vh;
}

.table {
  width: 100%;
  border: 1px solid #eeeeee;
  min-height: 70vh;
  border-radius: 20px;
}

.table-header {
  display: flex;
  width: 100%;
  background: #000;
  padding: 18px 0;
  gap: 8px;
  border-radius: 20px 20px 0px 0px;
}

.table-row {
  display: flex;
  width: 100%;
  padding: 18px 0;
  border-bottom: 1px solid white;
  align-items: center;
  text-transform: capitalize;
  gap: 8px;
}
/* .table-row:nth-of-type(odd) {
  background: #eeeeee;
} */
a:hover{
  color: #615f5f !important;
}
.table-data,
.header__item {
  flex: 1 1 10%;
  text-align: center;
}
.table-data-img{
  width: 12%;
  height: 200px;
  filter: drop-shadow(2px 4px 6px black);
  border-radius: 8px;
}

.header__item {
  text-transform: uppercase;
 
}

.filter__link {
  color: white;
  text-decoration: none;
  position: relative;
  display: inline-block;
  padding-left: 24px;
  padding-right: 24px;
}
.filter__link::after {
  content: "";
  position: absolute;
  right: -18px;
  color: white;
  font-size: 12px;
  top: 50%;
  transform: translateY(-50%);
}
.filter__link.desc::after {
  content: "(desc)";
}
.filter__link.asc::after {
  content: "(asc)";
}

